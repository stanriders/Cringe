@page
@using Cringe.Types.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Cringe.Web.Pages.Scores.DeleteModel

@{
    ViewData["Title"] = "Delete";
}

@if ((User.Identity?.IsAuthenticated ?? false) && User.IsInRole(UserRanks.Admin.ToString()))
{
    <h1>Delete</h1>

    <h3>Are you sure you want to delete this?</h3>
    <div>
        <h4>SubmittedScore</h4>
        <hr/>
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.BeatmapId)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.BeatmapId)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.PlayerUsername)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.PlayerUsername)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Count300)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Count300)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Count100)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Count100)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Count50)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Count50)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.CountGeki)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.CountGeki)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.CountKatu)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.CountKatu)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.CountMiss)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.CountMiss)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.ScoreV4)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.ScoreV4)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.MaxCombo)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.MaxCombo)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.FullCombo)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.FullCombo)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Rank)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Rank)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Mods)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Mods)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Passed)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Passed)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.GameMode)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.GameMode)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.PlayDateTime)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.PlayDateTime)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.OsuVersion)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.OsuVersion)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Quit)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Quit)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Failed)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Failed)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.SubmittedScore.Pp)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.SubmittedScore.Pp)
            </dd>
        </dl>

        <form method="post">
            <input type="hidden" asp-for="SubmittedScore.Id"/>
            <input type="submit" value="Delete" class="btn btn-danger"/> |
            <a asp-page="./Index">Back to List</a>
        </form>
    </div>
}